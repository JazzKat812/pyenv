#!/usr/bin/env bash
# Summary: Print the latest installed version with the given prefix
# Usage: pyenv latest [-k|--known] <prefix> ...
#
#   -k/--known      Select from all known versions instead of installed
#   -u/--unstable   Include prereleases

set -e
[ -n "$PYENV_DEBUG" ] && set -x

while [[ $# -gt 0 ]]
do
    case "$1" in
        -k|--known)
            FROM_KNOWN=1
            shift
            ;;
        *)
            break
            ;;
    esac
done

prefixes=("$@")

exitcode=0
for prefix in "${prefixes[@]}"
do
    # An existing version only matches itself
    if [[ -e $PYENV_ROOT/versions/$prefix ]]; then
        echo "$prefix"
        continue
    fi

    if [[ -z $FROM_KNOWN ]]; then
        shopt -s nullglob
        pushd "$PYENV_ROOT/versions" &>/dev/null
        DEFINITION_CANDIDATES=( "$prefix"-* "$prefix".* )
        popd &>/dev/null
        shopt -u nullglob
    else
        # https://stackoverflow.com/questions/11856054/is-there-an-easy-way-to-pass-a-raw-string-to-grep/63483807#63483807 
        prefix_re="$(sed 's/[^\^]/[&]/g;s/[\^]/\\&/g' <<< "$prefix")"
        IFS=$'\n' DEFINITION_CANDIDATES=( $(python-build --definitions | grep "^$prefix_re[-.]" || true) )
    fi

    OLDIFS="$IFS"
    IFS=$'\n'

    DEFINITION_CANDIDATES=(\
        $(printf '%s\n' "${DEFINITION_CANDIDATES[@]}" | \
          sed -E -e '/-dev$/d' -e '/-src$/d' -e '/-latest$/d' -e '/(b|rc)[0-9]+$/d'));

    DEFINITION_CANDIDATES=(\
        $(printf '%s\n' "${DEFINITION_CANDIDATES[@]}" | \
          awk \
            '{ if (match($0,"^[[:alnum:]]+-"))
               { print substr($0,0,RLENGTH-1) "." substr($0,RLENGTH+1) "..|" $0; }
             else
               { print $0 "...|" $0; }
             }'))
    DEFINITION_CANDIDATES=(\
        $(printf '%s\n' "${DEFINITION_CANDIDATES[@]}" \
          | sort -t. -k1,1r -k 2,2nr -k 3,3nr -k4,4nr \
          | cut -f2 -d $'|' \
        || true))
    DEFINITION="${DEFINITION_CANDIDATES}"

    IFS="$OLDIFS"

    if [[ -n "$DEFINITION" ]]; then
        echo "$DEFINITION"
    else
        echo "pyenv-latest: no $([[ -z $FROM_KNOWN ]] && echo installed || echo known) versions match the prefix \`$prefix'" >&2
        exitcode=1
    fi
done

exit $exitcode
